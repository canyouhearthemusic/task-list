definitions:
  models.Task:
    properties:
      activeAt:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  models.TaskRequest:
    properties:
      activeAt:
        type: string
      title:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple Todo List API.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Todo List API
  version: "1.0"
paths:
  /api/tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks by status
      parameters:
      - description: Status Filter
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.TaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new task
      tags:
      - tasks
  /api/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.TaskRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update a task
      tags:
      - tasks
  /api/tasks/{id}/done:
    put:
      description: Update a task status by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Mark task as done
      tags:
      - tasks
swagger: "2.0"
